1) git status
2) if you are creating a new project in git then,
git init - create an empty repository an existing one.(it means we have not file whom  we may transfer to in git)
3)git add --a  - this command will add all the files to the staging area .
4)git add first.txt - we can see that the file is removed from the staging area.
5)git commit -m "Initial Commit"(How much the files init ?)
6) git commit -m "Changed first.txt and added better design"


Staging :- Imagine a box . you can put stuff into the box. you can take stuff out of the box. this box is the staging area of git. +
staging is done by using git add command. This cimmand informs git about the contents those are ready to be commited.


Commit :- Git Commit is the next step after staging the contents. It is a sort of confirmation from your side after 
hich git creates a snapshot of the present state of repository 
forever , or in other words , we can say the contents staged got commited 

  Steps for commiting your work :
1) git add your work
2) git commit your work   

7) rm -rf .git - using for remove the old repository .
8)git clone https://------   (firstly using the tensorflow repository from googl and site name is git website tensorflo)
if you r changing in this file then we can see tht have been changing in it.


9) touch error.log - this command create a new file which name is error.log
and then we assume that our software automatically generate in error.log then

10) if i want to that humme koi mtlb ni h error.log se in working tree m ar error.log humme preshan naah krre to hum
touch .gitignore - then create a file which name is gitignore
11)In this file gitignore  we write a erroe.log and then save 
we see that in git status error.log will be removed and  only see file gitignore
12) git add --a - all the files are staging area
git commit -m "Added gitignore" - all the files are commited area

13) if our project m bhot sare error.log files create ho gyi then in git ignore  we write a ----  *.log (using for ignore the files)

14)agr humne directory bnayi ar usme files bii a ar folder bii h ar we wnna that humare folders k andr ka matter bii tracted ho than - 
in gitignore - dir/  tb humare directory ignore ho jyege(dir name ka folder  ignore ho jyege)(using for ignore the folder)

15) agr hume koi file ya directory add krni h in staging area m then we can write git commit -m "added static"

16)  if we want to that ignore the outer folder(dir) - then /dir/ write in gitignore file 

17) pure folder ko ignore krne k liye outer folder name(static) - static/dir

18) git diff -- this command looking the  differences between working directory and staging area .
19) git diff --staged - this command show the comparing between previous commited area from s now a commited area . 
20) skip the staging area and direct the commited command is ---   git commit -a -m "Direct commit"
 in this command tracked files to be direct commited but untracked files do not  yet commited  and for the files to be 
commited then the command is git add second.txt(filename)

21) remove the file ---- git rm third.txt
22)rename the file -----   git mv second.txt(old file name) second_renamed.txt(new file name)
23) if you dont want to tracked the file any one then ---  git rm --cached db.accdb
this command do not delete the file but it will be untracked the file

ar agr aap gitignore se db.accdb file ho remove kr doge tb vo yh show krayega ki aap file ko tracked ni kr rhe ho

24)git log -p ----   show  your changes in the files and show the previous detail  to the files 
25) git log -p -3 ---- it shows only 3 changes in your commit area

26) git log --stat ----- it  briefly explain the commit files that means which are you changes in all the files 

27)  git log --pretty=oneline ---- this command shows all the commit in one line
output : ---  514b096c79015e3e7ff0098805b820abc7167224 (HEAD -> master) coco
8c1484d4bcad49eaf102928136f8f70e0fe6e485 Changes
54d4b609bbb0284b78fb944ecae60838cb9dc565 Changed gitignore
687fb3eb0942fa918c67a6fa603a725652a4ce47 Changed gitignore
d9bc23650526e078b9096cf67139d6a84d693f04 renamed
4f7ba1bd307a634e4a901372c0979a7092126055 removed the files second.txt
87d0a3e8e6f416579cb04de33c420b93220dabd5 for commit
6ff1e9487f0765b979ae379f117174fa0a07c690 changes to be in a cart
f78433817d59f2622d474fe369b2ddda6fae16d1 added static
d1ea76efa6e4f51309c8951f18242636082421bf Added gitignore
d19367fd2e95033be3e46f1393688e1b3c82e8fb Changed first.txt and added better design
7c296a038bc181ac2a33783684785d6c055db4a2 Initial Commit
  
28)git log --pretty=short ----- this command shows the autors name and commit detail



   